/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.example.milkblockchain

//PARTICIPANTS

abstract participant Entity identified by entityId {
  o String entityId
  o String name
}

participant SysAdmin extends Entity { }

participant Manufacturer extends Entity{
  // o Integer cashInAccount
}

participant Distributor extends Entity { 
  // o Integer cashInAccount
  // o String region
}

participant Retailer extends Entity{ 
  // o Integer cashInAccount
  // o String region
}

//ASSETS
asset Milk identified by serialNo{
  o String serialNo
  o DateTime dateOfManufacture
  o DateTime dateOfExpiry
  --> Batch batch
  o String owner
}

asset Batch identified by batchNo {
  o String batchNo
  // --> Distributor distributor
}

asset Order identified by orderId {
  o String orderId
  o Integer quantity
  o OrderStatus orderStatus
  o Integer value
  --> Retailer placedBy
  --> Distributor takenBy
  --> Manufacturer manufacturer
}

// TRANSACTIONS

//admin adds new participant to network

transaction CreateSysAdmin{
  o String entityId
  o String name
}

transaction CreateManufacturer{
  o String entityId
  o String name
  // o Integer cashInAccount
}

transaction CreateDistributor{ 
  o String entityId
  o String name
  // o Integer cashInAccount
  // o String region
}

transaction CreateRetailer{
  o String entityId
  o String name
  // o Integer cashInAccount
  // o String region
}

//new milk manufactured
transaction CreateMilk {
  o String serialNo
  o DateTime dateOfManufacture
  o DateTime dateOfExpiry
  --> Batch batch
  o String owner
}

//labelling of milk
transaction CreateBatch {
  o String batchNo
  // --> Distributor distributor
}

transaction ChangeOwnership {
  --> Milk milk
}

transaction CreateOrder {
  o String orderId
  o Integer quantity
  o Integer value
  o OrderStatus orderStatus
  --> Retailer placedBy
  --> Distributor takenBy
  --> Manufacturer manufacturer
}

//trade between manufacturer and distributor
transaction Sell{
  o String serialNo
}

//distributor -> retailer
transaction Deliver{
  // --> Order order
  // --> Milk milk
  // o Integer saleAmount
  // --> Distributor distributor
  // --> Retailer retailer
  o String serialNo
}

enum OrderStatus {
  o PLACED
  o INTRANSIT
  o DELIVERED
}
